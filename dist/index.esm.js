const t="[intro-tour]:";var o=(...o)=>{console.log(t,...o)},n=(...o)=>{console.error(t,...o)},e=(...o)=>{console.warn(t,...o)};!function(t,o){void 0===o&&(o={});var n=o.insertAt;if(t&&"undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&e.firstChild?e.insertBefore(r,e.firstChild):e.appendChild(r),r.styleSheet?r.styleSheet.cssText=t:r.appendChild(document.createTextNode(t))}}('.intro-tour-outer-container {\n  display: none;\n  cursor: pointer;\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 8px;\n  width: var(--intro-tour-width);\n  height: var(--intro-tour-height); }\n  .intro-tour-outer-container.show {\n    display: flex;\n    align-items: center;\n    justify-content: space-between; }\n    .intro-tour-outer-container.show::after {\n      content: " ";\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translate(calc(-50% + var(--intro-tour-ox)), var(--intro-tour-oy));\n      border-width: 5px;\n      border-style: solid;\n      border-color: rgba(0, 0, 0, 0.7) transparent transparent transparent; }\n');class r{tooltipOffset=[0,16];overflowOffset=[0,0];tooltipStyle={width:200,height:32};errorHandler=t=>{n(t)};warnHandler=t=>{e(t)};range=null;root=document.createElement("div");constructor(t={}){if(window.introTour)throw new Error("plugin has been initialized. Do not call it again");const{errorHandler:n,warnHandler:e}=t;n&&(this.errorHandler=n),e&&(this.warnHandler=e),this.initEvent(),this.initTooltip(),o("plugin initialization is complete!"),window.introTour=this}initTooltip=()=>{this.root.appendChild(function(...t){const o=document.createDocumentFragment();try{for(let n=0;n<t.length;n+=1){const e=t[n],r=document.createRange().createContextualFragment(e);o.appendChild(r)}}catch(t){n(t)}return o}('<div>\n    <label for="intro-tour-underline">\n        <i class="iconfont intro-tour-underline">\n        <button id="intro-tour-underline">划线</button>\n    </label>\n    <span>评论</span>\n    <span>复制</span>\n</div>\n')),this.root.classList.add("intro-tour-outer-container");const{width:t,height:o}=this.tooltipStyle,[e,r]=this.overflowOffset;this.root.style.setProperty("--intro-tour-width",`${t}px`),this.root.style.setProperty("--intro-tour-height",`${o}px`),this.root.style.setProperty("--intro-tour-ox",`${e}px`),this.root.style.setProperty("--intro-tour-oy",`${r}px`),document.body.appendChild(this.root)};initEvent=()=>{document.addEventListener("mousedown",this.onMousedown),document.addEventListener("mouseup",this.onMouseup),this.root.addEventListener("click",this.onMenuClick)};onMenuClick=t=>{t.stopPropagation(),t.preventDefault(),n(t)};onMouseup=()=>{const t=window.getSelection();if(t){const o=t.getRangeAt(0);o.collapsed?this.warnHandler("range is collapsed"):(this.range=o.cloneRange(),this.showTooltip(this.range))}};onMousedown=()=>{this.root.classList.remove("show")};showTooltip=t=>{const o=t.getBoundingClientRect(),{left:n,top:e,width:r}=o,[i,s]=this.tooltipOffset,{width:a,height:l}=this.tooltipStyle,d=n+r/2-a/2-i,c=e-l-s;this.root.style.left=`${d}px`,this.root.style.top=`${c}px`,this.root.classList.add("show")}}export{r as default};
